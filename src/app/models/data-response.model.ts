// Generated by https://quicktype.io

export interface DataResponse<T> {
  data: T;
  pagination: Pagination;
  meta: Meta;
}

export interface Datum {
  type: Type;
  id: string;
  slug: string;
  url: string;
  bitly_gif_url: string;
  bitly_url: string;
  embed_url: string;
  username: string;
  source: string;
  rating: Rating;
  content_url: string;
  source_tld: string;
  source_post_url: string;
  is_sticker: number;
  import_datetime: string;
  trending_datetime: string;
  user: User;
  images: Images;
  title: string;
  _score: number;
}

export interface Images {
  fixed_height_still: The480WStill;
  original_still: The480WStill;
  fixed_width: { [key: string]: string };
  fixed_height_small_still: The480WStill;
  fixed_height_downsampled: { [key: string]: string };
  preview: DownsizedSmall;
  fixed_height_small: { [key: string]: string };
  downsized_still: The480WStill;
  downsized: The480WStill;
  downsized_large: The480WStill;
  fixed_width_small_still: The480WStill;
  preview_webp?: The480WStill;
  fixed_width_still: The480WStill;
  fixed_width_small: { [key: string]: string };
  downsized_small: DownsizedSmall;
  fixed_width_downsampled: { [key: string]: string };
  downsized_medium: The480WStill;
  original: { [key: string]: string };
  fixed_height: { [key: string]: string };
  hd?: DownsizedSmall;
  looping: { [key: string]: string };
  original_mp4: DownsizedSmall;
  preview_gif: The480WStill;
  '480w_still': The480WStill;
}

export interface The480WStill {
  url?: string;
  width?: string;
  height?: string;
  size?: string;
}

export interface DownsizedSmall {
  width?: string;
  height?: string;
  mp4?: string;
  mp4_size?: string;
}

export enum Rating {
  G = 'g',
  PG = 'pg',
  PG13 = 'pg-13'
}

export enum Type {
  GIF = 'gif'
}

export interface User {
  avatar_url: string;
  banner_url: string;
  banner_image?: string;
  profile_url: string;
  username: string;
  display_name: string;
  is_verified: boolean;
}

export interface Meta {
  status: number;
  msg: string;
  response_id: string;
}

export interface Pagination {
  total_count: number;
  count: number;
  offset: number;
}
